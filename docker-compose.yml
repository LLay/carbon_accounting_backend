version: '3'
services:
    nginx:
        build: ./docker/nginx
        ports:
            - 80:80
        depends_on:
            - api
    api:
        build: .
        depends_on:
            mongodb:
                condition: service_started # TODO service_healthy
            redis:
                condition: service_started # TODO service_healthy
            influxdb:
                # condition: service_healthy
                condition: service_started
        environment:
            API_HOST_PORT: 8888
            LOG_LEVEL: debug
            LOG_FILE_NAME: api.log
            LOG_TO_FILE: "false"
            NEW_RELIC_IS_ENABLED: "false"
            NEW_RELIC_LICENSE_KEY: key
            NEW_RELIC_PROXY_URL: http://newrelicproxy.com
            MONGO_URL: mongodb
            MONGO_PORT: 27017
            MONGO_TIMEOUT: 60
            MONGO_DATABASE_NAME: api
            REDIS_URL: redis
        restart: unless-stopped
    influxdb:
        # https://portal.influxdata.com/downloads/ influxdb:2.7.1
        image: bitnami/influxdb:2.7.1
        container_name: influxdb
        ports:
            - "8086:8086"
        environment:
            - INFLUXDB_ADMIN_USER_TOKEN=admin
            - INFLUXDB_ADMIN_USER_PASSWORD=adminalskdjfhalksdjh
            # - INFLUXDB_DB=mydb
            # - INFLUXDB_ADMIN_USER=admin
            # - INFLUXDB_ADMIN_PASSWORD=admin_password
        volumes:
            - ./influxdb-data:/var/lib/influxdb
        # healthcheck:
        #     test: [ "CMD", "influxd", "ping" ]
        #     interval: 10s
        #     timeout: 5s
        #     retries: 5
    mongodb:
        image: mongo:4
        restart: unless-stopped
    redis:
        image: redis:6
        restart: unless-stopped
    prometheus:
        image: prom/prometheus
        container_name: prometheus
        volumes:
            - ./metrics/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
        command:
            - '--config.file=/etc/prometheus/prometheus.yml'
        ports:
            - 9090:9090
    pushgateway:
        image: prom/pushgateway
        container_name: pushgateway
        ports:
            - 9091:9091
    grafana:
        image: grafana/grafana
        container_name: grafana
        ports:
            - 3000:3000
        volumes:
            - ./metrics/grafana/provisioning:/etc/grafana/provisioning
